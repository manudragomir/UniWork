     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fread, printf, fopen, fclose     
     6                                  
     7                                  import exit msvcrt.dll   
     8                                  import fread msvcrt.dll   
     9                                  import printf msvcrt.dll   
    10                                  import fopen msvcrt.dll   
    11                                  import fclose msvcrt.dll   
    12                                  
    13                                  segment data use32 class=data
    14 00000000 <res 00000004>              descriptor_fisier   resd    1
    15 00000004 766F63616C652E7478-         nume_fisier          db      'vocale.txt', 0
    15 0000000D 7400               
    16 0000000F 7200                        mod_acces            db      'r', 0
    17 00000011 <res 00000064>              bloc                resb        100
    18 00000075 00000000                    nr_consoane            dd     0
    19 00000079 256400                      format_afisare       db      '%d', 0
    20 0000007C 6165696F7500                string_vocale        db      'aeiou', 0
    21                                      
    22                                  
    23                                  segment code use32 class=code
    24                                      start:
    25                                      ;deschidem fisierul
    26 00000000 68[0F000000]                    push mod_acces
    27 00000005 68[04000000]                    push nume_fisier
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 4 * 2
    30                                          
    31                                      ;ne intrebam daca s-a deschis cu succes si salvam descriptor_fisier daca da
    32 00000013 83F800                          cmp eax, 0
    33 00000016 7475                            je final_program
    34                                          
    35 00000018 A3[00000000]                    mov [descriptor_fisier], eax
    36                                          
    37                                      ;citim cate un bloc de 100 de litere
    38                                          
    39                                      while1:
    40 0000001D FF35[00000000]                  push dword [descriptor_fisier]
    41 00000023 6A64                            push dword 100
    42 00000025 6A01                            push dword 1
    43 00000027 68[11000000]                    push bloc
    44 0000002C FF15[00000000]                  call [fread]
    45 00000032 83C410                          add esp, 4 * 4
    46                                          
    47 00000035 89C1                            mov ecx, eax
    48 00000037 E331                            jecxz afisare
    49 00000039 BE[11000000]                    mov esi, bloc
    50 0000003E FC                              cld
    51                                          
    52                                          for2:
    53 0000003F AC                                  lodsb; in al vom avea caracterul curent
    54                                              
    55 00000040 BF[7C000000]                        mov edi, string_vocale; punem in destinatie strigul de vocale
    56                                              
    57 00000045 51                                  push ecx
    58 00000046 B905000000                          mov ecx, 5
    59                                              
    60 0000004B 3C61                                cmp al, 'a'
    61 0000004D 7211                                jb endi
    62                                              
    63 0000004F 3C7A                                cmp al, 'z'
    64 00000051 770D                                ja endi
    65                                              
    66                                              for3:
    67 00000053 AE                                      scasb
    68                                                  
    69 00000054 7502                                    jnz reexecuta
    70 00000056 EB08                                    jmp am_gasit
    71                                                  
    72                                                  reexecuta:
    73 00000058 E2F9                                    loop for3
    74                                              
    75 0000005A FF05[75000000]                      inc dword [nr_consoane]
    76                                              am_gasit:
    77                                              endi:
    78 00000060 59                                  pop ecx
    79 00000061 E2DC                                loop for2
    80                                          
    81                                          
    82 00000063 83F864                          cmp eax, 100
    83 00000066 7202                            jb afisare
    84                                          
    85 00000068 EBB3                            jmp while1
    86                                          
    87                                      
    88                                      ;functia de afisare
    89                                      afisare:
    90 0000006A FF35[75000000]                  push dword [nr_consoane]
    91 00000070 68[79000000]                    push format_afisare
    92 00000075 FF15[00000000]                  call [printf]
    93 0000007B 83C408                          add esp, 4 * 2
    94                                          
    95                                      ;inchidem fisierul
    96 0000007E FF35[00000000]                  push dword [descriptor_fisier]
    97 00000084 FF15[00000000]                  call [fclose]
    98 0000008A 83C404                          add esp, 4 * 1
    99                                      
   100                                      
   101                                          final_program:
   102                                      
   103                                          
   104 0000008D 6A00                            push    dword 0      
   105 0000008F FF15[00000000]                  call    [exit]       
