     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fread, fclose, fopen, printf
     6                                                
     7                                  import exit msvcrt.dll   
     8                                  import fread msvcrt.dll   
     9                                  import fopen msvcrt.dll   
    10                                  import fclose msvcrt.dll   
    11                                  import printf msvcrt.dll   
    12                                  
    13                                  segment data use32 class=data
    14 00000000 <res 00000004>                  descriptor_fisier   resd    1
    15 00000004 <res 0000000A>                  bloc                resb    10
    16 0000000E 6E72706172652E7478-             nume_fisier         db      'nrpare.txt', 0
    16 00000017 7400               
    17 00000019 00000000                        numar_pare          dd      0
    18 0000001D 7200                            mod_acces           db      'r', 0
    19 0000001F 256400                          mod_afisare         db      '%d', 0
    20                                          
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 68[1D000000]                    push mod_acces
    25 00000005 68[0E000000]                    push nume_fisier
    26 0000000A FF15[00000000]                  call [fopen]
    27 00000010 83C408                          add esp, 4 * 2
    28                                          
    29 00000013 83F800                          cmp eax, 0
    30 00000016 7465                            je final
    31 00000018 A3[00000000]                    mov [descriptor_fisier], eax
    32                                          
    33                                          while1:
    34 0000001D FF35[00000000]                      push dword [descriptor_fisier]
    35 00000023 6A0A                                push dword 10
    36 00000025 6A01                                push dword 1
    37 00000027 68[04000000]                        push bloc
    38 0000002C FF15[00000000]                      call [fread]
    39 00000032 83C410                              add esp, 4 * 4
    40                                              
    41 00000035 83F800                              cmp eax, 0
    42 00000038 7420                                je inchide_fisier
    43                                              
    44 0000003A 89C1                                mov ecx, eax
    45 0000003C BE[04000000]                        mov esi, bloc
    46                                              
    47                                              for1:
    48 00000041 AC                                      lodsb
    49 00000042 3C30                                    cmp al, '0'
    50 00000044 7210                                    jb treci_la_loop
    51                                                  
    52 00000046 3C39                                    cmp al, '9'
    53 00000048 770C                                    ja treci_la_loop
    54                                                  
    55 0000004A 2C30                                    sub al, '0'
    56 0000004C A801                                    test al, 1
    57                                                  
    58 0000004E 7506                                    jnz treci_la_loop
    59 00000050 FF05[19000000]                          inc dword [numar_pare]
    60                                                  
    61                                                  treci_la_loop:
    62 00000056 E2E9                                    loop for1
    63                                                  
    64 00000058 EBC3                                jmp while1
    65                                              
    66                                          
    67                                          inchide_fisier:
    68 0000005A FF35[00000000]                  push dword [descriptor_fisier]
    69 00000060 FF15[00000000]                  call [fclose]
    70 00000066 83C404                          add esp, 4 * 1
    71                                          
    72 00000069 FF35[19000000]                  push dword [numar_pare]
    73 0000006F 68[1F000000]                    push mod_afisare
    74 00000074 FF15[00000000]                  call [printf]
    75 0000007A 83C408                          add esp, 4 * 2
    76                                          
    77                                          final:
    78                                          
    79 0000007D 6A00                            push    dword 0      
    80 0000007F FF15[00000000]                  call    [exit]       
