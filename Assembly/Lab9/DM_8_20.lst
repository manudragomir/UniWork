     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, scanf, printf
     6                                        
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 <res 00000004>              a     resd    1
    13 00000004 <res 00000004>              b     resd    1
    14 00000008 <res 00000004>              rez1  resd    1
    15 0000000C <res 00000004>              rez2  resd    1
    16 00000010 2578257800                  format_citire    db    '%x%x', 0
    17 00000015 73756D61203D202578-         format_afisare1  db    'suma = %x', 0
    17 0000001E 00                 
    18 0000001F 0A000000                    enteri           dd    10
    19 00000023 6469666572656E7461-         format_afisare2  db    'diferenta = %x', 0
    19 0000002C 203D20257800       
    20                                      
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 68[04000000]                    push b
    24 00000005 68[00000000]                    push a
    25 0000000A 68[10000000]                    push format_citire
    26 0000000F FF15[00000000]                  call [scanf]
    27 00000015 83C40C                          add esp, 4 * 3
    28                                          
    29 00000018 B800000000                      mov eax, 0
    30 0000001D BB00000000                      mov ebx, 0
    31                                          
    32 00000022 668B1D[04000000]                mov bx, [b]
    33 00000029 66A1[00000000]                  mov ax, [a]
    34                                          
    35 0000002F 6601D8                          add ax, bx
    36 00000032 A3[08000000]                    mov [rez1], eax
    37                                          
    38 00000037 668B1D[06000000]                mov bx, [b+2]
    39 0000003E 66A1[02000000]                  mov ax, [a+2]
    40                                          
    41 00000044 6629D8                          sub ax, bx
    42 00000047 A3[0C000000]                    mov [rez2], eax
    43                                          
    44                                          
    45 0000004C FF35[08000000]                  push dword [rez1]
    46 00000052 68[15000000]                    push format_afisare1
    47 00000057 FF15[00000000]                  call [printf]
    48 0000005D 83C408                          add esp, 4 * 2        
    49                                          
    50 00000060 68[1F000000]                    push enteri
    51 00000065 FF15[00000000]                  call [printf]
    52 0000006B 83C404                          add esp, 4 * 1 
    53                                          
    54 0000006E FF35[0C000000]                  push dword [rez2]
    55 00000074 68[23000000]                    push format_afisare2
    56 00000079 FF15[00000000]                  call [printf]
    57 0000007F 83C408                          add esp, 4 * 2        
    58                                          
    59 00000082 6A00                            push    dword 0
    60 00000084 FF15[00000000]                  call    [exit]
