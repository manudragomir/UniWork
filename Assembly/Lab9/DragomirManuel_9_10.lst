     1                                  ;; Dragomir Manuel, grupa 213, 6.12.2018, problema 10, laboratorul 9
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit, fprintf, scanf, fopen, fclose, printf          ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import scanf msvcrt.dll
    14                                  import printf msvcrt.dll
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 <res 0000001F>              nume_de_fisier resb 31
    20 0000001F <res 00000079>              text resb 121
    21 00000098 <res 00000014>              descriptor_file resb 20
    22 000000AC 7700                        mod_acces db "w", 0
    23 000000AE 257300                      format db "%s", 0
    24 000000B1 4E756D656C65206669-         mesaj db "Numele fisierului este: ", 0
    24 000000BA 73696572756C756920-
    24 000000C3 657374653A2000     
    25 000000CA 54657874756C206573-         mesaj1 db "Textul este: ", 0
    25 000000D3 74653A2000         
    26                                      
    27                                  
    28                                  ; our code starts here
    29                                  segment code use32 class=code
    30                                      start:
    31                                          ; ...
    32                                          
    33 00000000 68[B1000000]                    push dword mesaj
    34 00000005 FF15[00000000]                  call [printf]
    35 0000000B 83C404                          add esp, 4*1
    36                                          
    37 0000000E 68[00000000]                    push dword nume_de_fisier
    38 00000013 68[AE000000]                    push dword format
    39 00000018 FF15[00000000]                  call [scanf]
    40 0000001E 83C408                          add esp, 4 * 2
    41                                          
    42 00000021 68[CA000000]                    push dword mesaj1
    43 00000026 FF15[00000000]                  call [printf]
    44 0000002C 83C404                          add esp, 4*1
    45                                          
    46                                          
    47 0000002F 68[1F000000]                    push dword text
    48 00000034 68[AE000000]                    push dword format
    49 00000039 FF15[00000000]                  call [scanf]
    50 0000003F 83C408                          add esp, 4 * 2  
    51                                              
    52                                          
    53 00000042 68[AC000000]                    push dword mod_acces
    54 00000047 68[00000000]                    push dword nume_de_fisier
    55 0000004C FF15[00000000]                  call [fopen]
    56 00000052 83C408                          add esp, 4 * 2
    57                                          
    58 00000055 A3[98000000]                    mov [descriptor_file], eax
    59                                          
    60 0000005A 83F800                          cmp eax, 0
    61 0000005D 7423                            je final
    62                                          
    63 0000005F 68[1F000000]                    push dword text
    64 00000064 FF35[98000000]                  push dword [descriptor_file]
    65 0000006A FF15[00000000]                  call [fprintf]
    66 00000070 83C408                          add esp, 4 * 2
    67                                          
    68                                          
    69 00000073 FF35[98000000]                  push dword [descriptor_file]
    70 00000079 FF15[00000000]                  call [fclose]
    71 0000007F 83C404                          add esp, 4
    72                                          
    73                                          
    74                                      
    75                                          final:
    76                                          ; exit(0)
    77 00000082 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    78 00000084 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
