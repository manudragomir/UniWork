     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, scanf, printf
     6                                        
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 <res 00000004>              a   resd    1
    13 00000004 <res 00000004>              b   resd    1
    14 00000008 2564256400                  format db '%d%d', 0
    15 0000000D 2564203C20256400            format1 db '%d < %d', 0
    16 00000015 2564203D20256400            format2 db '%d = %d', 0
    17 0000001D 2564203E20256400            format3 db '%d > %d', 0
    18                                      
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 68[04000000]                    push b
    22 00000005 68[00000000]                    push a
    23 0000000A 68[08000000]                    push format
    24 0000000F FF15[00000000]                  call [scanf]
    25 00000015 83C40C                          add esp, 4 * 3
    26                                          
    27 00000018 A1[00000000]                    mov eax, [a]
    28 0000001D 8B1D[04000000]                  mov ebx, [b]
    29                                          
    30 00000023 39D8                            cmp eax, ebx
    31                                          
    32 00000025 7404                            jz egale
    33 00000027 7F14                            jg mai_mare
    34 00000029 7C24                            jl mai_mic
    35                                          
    36                                          egale:
    37 0000002B 53                                  push ebx
    38 0000002C 50                                  push eax
    39 0000002D 68[15000000]                        push format2
    40 00000032 FF15[00000000]                      call [printf]
    41 00000038 83C40C                              add esp, 4 * 3
    42 0000003B EB24                                jmp final
    43                                              
    44                                          mai_mare:
    45 0000003D 53                                  push ebx
    46 0000003E 50                                  push eax
    47 0000003F 68[1D000000]                        push format3
    48 00000044 FF15[00000000]                      call [printf]
    49 0000004A 83C40C                              add esp, 4 * 3
    50 0000004D EB12                                jmp final
    51                                            
    52                                          mai_mic:
    53 0000004F 53                                  push ebx
    54 00000050 50                                  push eax
    55 00000051 68[0D000000]                        push format1
    56 00000056 FF15[00000000]                      call [printf]
    57 0000005C 83C40C                              add esp, 4 * 3
    58 0000005F EB00                                jmp final
    59                                          
    60                                          
    61                                          final:
    62                                              
    63                                          
    64 00000061 6A00                            push    dword 0
    65 00000063 FF15[00000000]                  call    [exit]
