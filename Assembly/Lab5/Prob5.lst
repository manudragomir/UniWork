     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 61416242322578              S db 'a', 'A', 'b', 'B', '2', '%', 'x'
    15                                      len1 equ $ - S
    16 00000007 <res 00000007>              D resb len1
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                      
    23 00000000 B907000000                  mov ecx, len1
    24 00000005 BE00000000                  mov esi, 0
    25 0000000A BF00000000                  mov edi, 0
    26                                      
    27 0000000F E318                        jecxz Sfarsit
    28                                      
    29                                      For_1:
    30 00000011 8A86[00000000]                  mov al, [S + esi]
    31 00000017 3C61                            cmp al, 'a'
    32 00000019 7C0B                            jl Nu_e_litera_mica
    33                                          
    34 0000001B 3C7A                            cmp al, 'z'
    35 0000001D 7F07                            jg Nu_e_litera_mica
    36                                          
    37 0000001F 8887[07000000]                  mov [D + edi], al
    38 00000025 47                              inc edi       
    39                                          
    40                                          Nu_e_litera_mica:
    41 00000026 46                              inc esi
    42                                          
    43 00000027 E2E8                        loop For_1
    44                                      
    45                                      Sfarsit: 
    46                                          ; exit(0)
    47 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    49                                  
