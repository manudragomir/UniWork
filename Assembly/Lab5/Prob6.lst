     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0102030405060708            S db 1, 2, 3, 4, 5, 6, 7, 8
    15                                      len1 equ $ - S
    16                                      
    17 00000008 <res 00000008>              D resb len1
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                      
    24 00000000 B908000000                  mov ecx, len1
    25 00000005 BE00000000                  mov esi, 0
    26 0000000A BF00000000                  mov edi, 0
    27                                      
    28                                      For_1:
    29 0000000F 8A86[00000000]              mov al, [S + esi]
    30 00000015 8887[08000000]              mov [D + edi], al  
    31 0000001B 46                          inc esi    
    32 0000001C 46                          inc esi
    33 0000001D 47                          inc edi
    34 0000001E 49                          dec ecx
    35 0000001F E2EE                        loop For_1
    36                                      
    37 00000021 B908000000                  mov ecx, len1
    38 00000026 BE01000000                  mov esi, 1
    39                                      
    40                                      For_2:
    41 0000002B 8A86[00000000]              mov al, [S + esi]
    42 00000031 8887[08000000]              mov [D + edi], al  
    43 00000037 46                          inc esi    
    44 00000038 46                          inc esi
    45 00000039 47                          inc edi
    46 0000003A 49                          dec ecx
    47 0000003B E2EE                        loop For_2
    48                                      
    49                                      
    50                                      
    51                                          ; exit(0)
    52 0000003D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    53 0000003F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
