     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  
    15 00000000 01020304                    S1 db 1, 2, 3, 4
    16                                      len1 equ $ - S1
    17                                      
    18 00000004 050607                      S2 db 5, 6, 7
    19                                      len2 equ $ - S2
    20                                      
    21 00000007 <res 00000007>              D resb len1 + len2 
    22                                      
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27                                      
    28 00000000 B904000000                  mov ecx, len1
    29 00000005 BE00000000                  mov esi, 0
    30                                      
    31 0000000A E31B                        jecxz For_2
    32                                      
    33                                      For_1:
    34 0000000C 8A86[00000000]                  mov al, [S1 + esi]
    35 00000012 8886[07000000]                  mov [D + esi], al
    36 00000018 46                              inc esi
    37                                      
    38 00000019 E2F1                        loop For_1
    39                                      
    40 0000001B B903000000                  mov ecx, len2
    41 00000020 BF02000000                  mov edi, len2 - 1
    42 00000025 E310                        jecxz Sfarsit
    43                                      
    44                                      For_2:
    45 00000027 8A87[04000000]                  mov al, [S2 + edi]
    46 0000002D 8886[07000000]                  mov [D + esi], al
    47 00000033 4F                              dec edi
    48 00000034 46                              inc esi
    49                                      
    50 00000035 E2F0                        loop For_2
    51                                      
    52                                      Sfarsit:
    53                                      
    54                                          ; exit(0)
    55 00000037 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    56 00000039 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
